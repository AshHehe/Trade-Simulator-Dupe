do do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (3==v0) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v24=nil;function v24()local v39=0;local v40;local v41;local v42;local v43;while true do if (v39==(938 -(98 + 839))) then return (v43 * (16778774 -(1248 + 310))) + (v42 * (66235 -(391 + 308))) + (v41 * 256) + v40;end if (v39==0) then v40,v41,v42,v43=v2(v16,v19,v19 + 2 + 1);v19=v19 + (4 -3) + 3;v39=1458 -((574 -(68 + 100)) + 1046 + 5);end end end v25=nil;v18=4;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v62=(v31/((1138 -(294 + 842))^(v32-(1 + 0))))%((897 -(102 + 793))^(((v33-(1 + 0 + 0)) -(v32-(1 + 0))) + (977 -(388 + 588))));return v62-(v62%(148 -(83 + 64)));else local v63=(1316 -(339 + 975))^(v32-(1 + 0));return (((v31%(v63 + v63))>=v63) and (2 -1)) or (537 -(62 + 475));end end v22=nil;v18=2;end if (7==v18) then function v30(v34,v35,v36)local v44=v34[1];local v45=v34[2];local v46=v34[3];return function(...)local v64=1;local v65= -1;local v66={...};local v67=v12("#",...) -1;local function v68()local v74=v44;local v75=Const;local v76=v45;local v77=v46;local v78=v28;local v79={};local v80={};local v81={};for Idx=1335 -(522 + 813),v67 do if ((Idx>=v77) or ((460 -(14 + 23))<(16 -10))) then v79[Idx-v77]=v66[Idx + 1];else v81[Idx]=v66[Idx + 1 + 0];end end local v82=(v67-v77) + (2 -1);local v83;local v84;while true do local v92=0 -0;local v93;while true do if (((749 + (6365 -3116))==(3500 + 498)) and (v92==(0 + (0 -0)))) then v93=14 -(13 + 1 + 0);while true do if (((1838 + 159)>=498) and (v93==(1032 -(995 + 36)))) then if (((10673 -7422)>=(868 -(151 + 525))) and (v84<=(13 + 1))) then if (((1652 -(38 + 462))<=(8251 -5272)) and (v84<=6)) then if ((v84<=(2 + 0)) or (905>(4601 + 193))) then if (((3190 -((112 -39) + 937))<=(3956 + 258)) and (v84<=(1368 -(1044 + 324)))) then if ((v81[v83[8 -6]]==v83[9 -(1941 -(300 + 1636))]) or ((16 + 8)==2686)) then v64=v64 + 1 + 0;else v64=v83[3];end elseif (((925 + 95)==1020) and (v84>(672 -(248 + 423)))) then local v108=0 + 0;local v109;local v110;local v111;while true do if (((11177 -7250)>=(604 + 32)) and (v108==1)) then v111=nil;while true do if ((v109==(0 + 0)) or ((1261 + 1755)==1629)) then local v157=0;while true do if ((v157==(2 -1)) or ((2525 + 26)<(1849 -(19 + 340)))) then v109=178 -(70 + 38 + (831 -(366 + 396)));break;end if ((v157==(0 -0)) or (2863<=(11140 -8836))) then local v180=0 -0;while true do if ((v180==(1073 -(291 + 782))) or (617==((20174 -9449) -6638))) then v110=v83[(5390 -3538) -((3429 -(569 + 1290)) + 280)];v111=v81[v83[11 -8]];v180=1524 -(329 + 1194);end if (((13052 -8657)<(1348 + 3552)) and ((1 -(0 -0))==v180)) then v157=1 + 0;break;end end end end end if ((v109==(1 + 0)) or (2724<=(2929 -(1861 -(395 + 126))))) then v81[v110 + (4 -3)]=v111;v81[v110]=v111[v83[250 -(202 + 44)]];break;end end break;end if ((2197<=(12228 -9097)) and (v108==((0 -0) -0))) then local v149=0 -0;while true do if ((4594>(3329 -(575 + 21 + 6))) and (v149==1)) then v108=2 -1;break;end if ((1863<=(6281 -((2176 -(226 + 1345)) + 697))) and (0==v149)) then v109=0;v110=nil;v149=1;end end end end else v81[v83[7 -5]]();end elseif ((v84<=4) or (3358<=(3810 -(310 + 684)))) then if ((v84==(3 + 0)) or ((6056 -(650 + 8 + 517))<=(4285 -(298 + 55)))) then local v112=0;local v113;while true do if (((3677 -2045)==(4694 -3062)) and ((0 -0)==v112)) then v113=v83[3 -1];v81[v113](v13(v81,v113 + (1368 -(705 + 662)),v83[7 -4]));break;end end else v81[v83[461 -(28 + 431)]]=v81[v83[1417 -(1205 + 209)]] + v83[8 -4];end elseif (((700 + 13)<=(3304 + 604)) and (v84==(13 -8))) then do return;end else v81[v83[1 + 1]][v83[3]]=v83[3 + 1];end elseif ((v84<=(1701 -(1347 + 344))) or ((1638 -(123 + 462))>=(12843 -9838))) then if ((v84<=(13 -5)) or ((7890 -3857)<1384)) then if ((v84==(7 + 0)) or ((672 + (2633 -1469))<=(2250 -(121 + 446)))) then v81[v83[2]]=v81[v83[723 -(53 + 667)]][v83[(1128 -(396 + 731)) + 3]];else v81[v83[2]]=v81[v83[(741 + 211) -(772 + 177)]]/v81[v83[17 -13]];end elseif (((8162 -(3941 + 157))<=((15088 -7969) -2513)) and (v84==((1787 + 146) -(1892 + 32)))) then if ((v83[2]==v81[v83[1 + 3]]) or ((16 + 597 + 3675)==(4328 -(1046 + 597)))) then v64=v64 + (2 -1);else v64=v83[511 -(106 + 402)];end else v81[v83[2]]=v83[3 + 0];end elseif ((v84<=(17 -5)) or ((1403 + 1027)<=(4669 -2764))) then if ((v84>(373 -(125 + (1116 -(757 + 122))))) or ((485 + 415)>(2278 -(522 + (1753 -(677 + 714)))))) then v81[v83[1828 -(568 + (2111 -(527 + 326)))]]=v30(v76[v83[846 -(582 + 261)]],nil,v36);else local v114=(2867 -(88 + 1532)) -(579 + 668);local v115;local v116;local v117;while true do if (((5181 -(120 + (3125 -1311)))>=(2064 -(1169 + 286))) and (((3180 -(1362 + 495)) -(1309 + 14))==v114)) then v115=v76[v83[5 -2]];v116=nil;v114=976 -(323 + 177 + 475);end if (((2468 -(153 + 965))>=(419 + 203)) and (v114==1)) then local v150=0 -0;while true do if (((3542 -(257 + 64 + (2781 -1306)))==(1518 + 205 + 23)) and (v150==(1 -0))) then v114=2;break;end if ((v150==(709 -(457 + 252))) or (((1223 + 13306) -10769)<(5311 -1711))) then v117={};v116=v10({},{__index=function(v164,v165)local v174=0;local v175;local v176;while true do if (((2081 -(176 + 354))<3832) and ((3 -2)==v174)) then while true do if ((108<(4903 -(352 + 402))) and (v175==((0 -0) -0))) then local v189=0;while true do if ((v189==(0 -0)) or (3326<(3589 -(732 + 292)))) then local v193=0 -0;while true do if ((v193==0) or ((1225 + 2646)<(37 + (132 -41)))) then v176=v117[v165];return v176[1 + 0][v176[(4751 -3507) -((3568 -2490) + 164)]];end end end end end end break;end if (((3428 -2098)<2769) and ((0 -0)==v174)) then v175=0 -0;v176=nil;v174=102 -(27 + (303 -229));end end end,__newindex=function(v166,v167,v168)local v177=0 + 0;local v178;local v179;while true do if ((v177==0) or ((304 + 4673)==(4602 -(878 + 330)))) then v178=1664 -(339 + 1325);v179=nil;v177=2 -1;end if ((v177==(1297 -(14 + 1282))) or ((5106 -(390 + (547 -231)))==1099)) then while true do if ((v178==(127 -(87 + 40))) or (3694<(3660 -(167 + 148)))) then v179=v117[v167];v179[(855 -(762 + 92)) + (0 -0)][v179[6 -4]]=v168;break;end end break;end end end});v150=1 + 0;end end end if ((v114==(3 -1)) or (2524>(5127 -(154 + 192)))) then for Idx=1 -0,v83[(33 -25) -4] do local v153=582 -(355 + 227);local v154;local v155;while true do if ((v153==(1 -(1329 -(36 + 1293)))) or ((5123 -1518)<=((1481 -(119 + 39)) -(59 + 80 + 244)))) then while true do if (((1722 -1051)<(4202 + 224)) and (v154==(1 + 0 + 0))) then if ((3995==3995) and (v155[1]==20)) then v117[Idx-1]={v81,v155[(2910 -(1451 + 73)) -(1267 + 116)]};else v117[Idx-(2 -(1043 -(229 + 813)))]={v35,v155[859 -(517 + 339)]};end v80[ #v80 + 1 + 0 + 0]=v117;break;end if (((615 + 12)<=(952 + 378)) and (v154==(1333 -(803 + 530)))) then local v185=(2441 -(866 + 428)) -(1115 + 32);while true do if (((51 + 265 + 1090)==(2083 -677)) and (v185==((4 -3) + 0))) then v154=2 -1;break;end if (((361 + 2267)<3087) and ((0 -0)==v185)) then v64=v64 + 1;v155=v74[v64];v185=(3 + 1) -(6 -3);end end end end break;end if ((v153==(0 + (0 -0))) or ((4215 -(653 + 48))<=1510)) then v154=0 + 0;v155=nil;v153=1 + 0;end end end v81[v83[5 -3]]=v30(v115,v116,v36);break;end end end elseif ((v84==(394 -(244 + 137))) or (2163<(79 -35))) then v64=v83[13 -10];else v81[v83[5 -3]]=v81[v83[1 + (3 -1)]] * v81[v83[598 -(436 + 158)]];end elseif ((v84<=21) or (3941==((7773 -(816 + 156)) -(1725 + 191)))) then if ((v84<=(61 -44)) or (((7223 -2437) -1512)<=(564 + 839))) then if ((2196<(2130 + 436)) and (v84<=(20 -5))) then v36[v83[14 -(11 + 0)]]=v81[v83[4 -2]];elseif ((v84==16) or (948>=4375)) then local v118=0 + 0;local v119;while true do if ((2054<(4032 + 515)) and (v118==(0 + 0))) then v119=v83[1102 -(400 + 700)];v81[v119]=v81[v119](v13(v81,v119 + ((3 -1) -1),v65));break;end end else local v120=1348 -(1311 + 37);local v121;while true do if ((((20355 -11489) -4942)==(7122 -3198)) and (v120==(0 -0))) then v121=v83[2];v81[v121]=v81[v121](v81[v121 + 1]);break;end end end elseif ((v84<=(43 -24)) or ((5150 -(3973 -(442 + 430)))>(16154 -12297))) then if ((v84==(1 + 17)) or ((324 + 1153)>(1370 + 2484))) then local v122=0 -0;local v123;local v124;while true do if ((v122==(470 -(129 + 340))) or (4730<(5599 -(11 + 1246)))) then while true do if (((1468 -(782 + 9))==677) and (v123==0)) then v124=v83[2 + 0];do return v13(v81,v124,v124 + v83[3]);end break;end end break;end if (((7103 -2375)>=(3294 -(252 + 1747))) and (v122==0)) then v123=0 -0;v124=nil;v122=975 -(57 + 917);end end else do return v81[v83[6 -4]];end end elseif ((((9783 -7158) -(3601 -(1195 + 709)))>((481 + 1052) -1112)) and (v84==20)) then v81[v83[1 + 1]]=v81[v83[2 + 1]];else v81[v83[(677 + 469) -(958 + 186)]][v83[3]]=v81[v83[3 + 1]];end elseif (((3222 -(53 + 59))>(784 -324)) and (v84<=(31 -6))) then if ((1681>(753 + 404)) and (v84<=(870 -(171 + 9 + 667)))) then if (((452 + 1733)<(8133 -3168)) and (v84>(1 + 21))) then v81[v83[2 + 0]]=v36[v83[3]];else v81[v83[2]]=v35[v83[601 -(87 + 511)]];end elseif ((1613<=4193) and (v84>(2016 -(1096 + 896)))) then local v125=158 -(125 + 33);local v126;local v127;while true do if (((5111 -(68 + 230))==(19425 -14612)) and (1==v125)) then while true do if (((6 + (2203 -(140 + 884)))==(1911 -(262 + 464))) and (v126==0)) then v127=v83[2 + 0];v81[v127]=v81[v127](v13(v81,v127 + (3 -2),v83[1 + 2]));break;end end break;end if ((2770==2770) and ((0 -0)==v125)) then v126=0 + 0 + 0;v127=nil;v125=3 -2;end end else local v128=0 -0;local v129;local v130;local v131;while true do if (((0 + 0)==v128) or (1836>=(5549 -(4909 -(1110 + 331))))) then v129=(868 -(204 + 664)) -0;v130=nil;v128=1;end if ((((4 -3) -0)==v128) or ((6333 -(1541 + 355))<387)) then v131=nil;while true do if (((1845 + 2043)>(1861 + 1376)) and (v129==(873 -((2293 -(1768 + 221)) + 568)))) then while true do if (((0 + 0)==v130) or ((4348 -(67 + 1743))==(1916 -(105 + 389)))) then v131=v83[(2 -1) + 1];v81[v131]=v81[v131]();break;end end break;end if (((599 + 1165)<(3788 -(25 + 1 + 3))) and (v129==(0 + 0))) then local v158=0 + 0;while true do if (((2334 -(1096 + 157))==1081) and (v158==(1702 -(1115 + 586)))) then v129=2 -1;break;end if ((v158==0) or (3352<302)) then v130=0 -0;v131=nil;v158=1746 -(242 + 1503);end end end end break;end end end elseif ((v84<=(18 + (1143 -(159 + 975)))) or ((1964 -(55 + 29))==(5454 -((4117 -2591) + 416)))) then if ((v84>(1624 -(690 + 908))) or ((268 + 246 + 393)<=(412 -(44 + 237)))) then if (v81[v83[145 -(59 + 84)]] or ((5727 -3256)<=((1094 -(172 + 269)) + 707))) then v64=v64 + 1 + 0;else v64=v83[3];end else local v132=0 -0;local v133;local v134;local v135;local v136;local v137;while true do if (((5545 -(870 + 145))>(76 + 1258)) and (v132==(1773 -(1062 + 710)))) then v135=nil;v136=nil;v132=2;end if ((v132==(1 + 1)) or ((7038 -4602)<(2548 -(273 + 490)))) then v137=nil;while true do if ((v133==(0 -0)) or ((1685 + 1876)>(2857 + (2223 -(9 + 79))))) then v134=v83[905 -(166 + 737)];v135,v136=v78(v81[v134](v81[v134 + (1816 -((2099 -(30 + 1918)) + 1664))]));v133=1;end if (((1719 -1221)==(854 -356)) and (v133==((2 -1) -0))) then local v159=0;while true do if ((v159==(0 -0)) or (1301>(13568 -8750))) then v65=(v136 + v134) -(1505 -(399 + 1105));v137=0 + 0 + 0;v159=(3 -1) -1;end if ((v159==(1 -0)) or ((1627 + 76)>=((1699 + 4745) -3957))) then v133=2 -0;break;end end end if ((v133==(4 -2)) or ((2450 -1379)>=(4352 -(258 + 491)))) then for Idx=v134,v65 do local v169=894 -(794 + 100);local v170;while true do if ((v169==(0 + 0)) or ((2732 + 1831)>=((6738 -(538 + 779)) -(208 + 462)))) then v170=0;while true do if ((v170==0) or ((7759 -5144)==(5370 -(955 + 44)))) then v137=v137 + (1 -(0 + 0));v81[Idx]=v135[v137];break;end end break;end end end break;end end break;end if (((1587 -(2206 -(615 + 601)))==(2016 -(49 + 1370))) and ((1122 -(706 + 416))==v132)) then v133=(1072 -(138 + 934)) -(893 -(121 + 772));v134=nil;v132=1 + 0;end end end elseif ((v84==(11 + 17)) or ((1846 -(389 + 359))<883)) then for Idx=v83[2],v83[533 -(374 + (284 -128))] do v81[Idx]=nil;end else local v138=0 -0;local v139;local v140;local v141;local v142;local v143;while true do if ((v138==(1267 -(1004 + (831 -(308 + 262))))) or (3436<=(892 + 638))) then v143=nil;while true do if ((v139==(1676 -(1258 + 416))) or ((2151 + 1808)<=(4708 -1818))) then for Idx=v140,v65 do local v171=0 + 0 + 0;while true do if ((v171==0) or ((710 -(126 + 436))>(6079 -(118 + 1618)))) then v143=v143 + 1;v81[Idx]=v141[v143];break;end end end break;end if (((21223 -16462)>(11436 -8771)) and (v139==((0 -0) + 0 + 0))) then local v160=1973 -(1853 + 120);while true do if (((4143 -2377)<=4941) and (v160==(382 -(298 + 83)))) then v139=1 + 0;break;end if ((v160==0) or (2882<=1133)) then v140=v83[2];v141,v142=v78(v81[v140](v13(v81,v140 + (3 -2),v83[3])));v160=1828 -(1211 + 616);end end end if ((v139==1) or ((503 + 1331)>2590)) then local v161=0;while true do if (((1292 -(550 + 741))==v161) or ((2422 -(111 + 414))>(6942 -4538))) then v139=9 -(1 + 6);break;end if ((v161==(0 + 0)) or ((2238 + 1923)<=(2583 -(316 + 69)))) then v65=(v142 + v140) -(1 + 0);v143=(25 + 1779) -(1484 + 320);v161=1;end end end end break;end if ((v138==(1548 -(1114 + 274 + 159))) or (((4746 -(17 + 40)) -(647 + 340))<(1381 + 1124))) then local v151=0 + 0;while true do if (((7603 -4821)==(1027 + 1755)) and (v151==((3 -2) + 0))) then v138=637 -(26 + 609);break;end if ((v151==(1081 -(300 + 781))) or ((1159 + 2604)<=2785)) then v141=nil;v142=nil;v151=860 -(129 + 730);end end end if ((v138==(0 + 0 + 0)) or (123>=(2411 -((2519 -(1953 + 23)) + 1180)))) then v139=1994 -(1095 + 899);v140=nil;v138=946 -(252 + 693);end end end v64=v64 + 1;break;end if ((440<(1977 -1205)) and (((1205 + 564) -(342 + 1427))==v93)) then v83=v74[v64];v84=v83[1 + 0];v93=1 + 0;end end break;end end end end A,B=v28(v11(v68));if  not A[1] then local v85=0;local v86;while true do if (v85==0) then v86=v34[4][v64] or "?";error("Script error at ["   .. v86   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (v18==4) then function v25()local v47=v24();local v48=v24();return (( -((133 + 149) -(29 + 251)) * v21(v48,32)) + 1 + 0) * ((2 + 0)^(v21(v48,15 + 6,14 + 17) -(3628 -2605))) * ((((v21(v48,1,(20 + 9) -9) * (2^(74 -42))) + v47)/((2 -0)^(74 -(12 + 10)))) + (3 -2));end v26=nil;function v26(v37)local v49;if  not v37 then v37=v24();if (v37==(618 -(556 + 62))) then return "";end end v49=v4(v16,v19,(v19 + v37) -(1 + 0));v19=v19 + v37;local v50={};for Idx=313 -(79 + 233), #v49 do v50[Idx]=v3(v2(v4(v49,Idx,Idx)));end return v7(v50);end v18=5;end if (6==v18) then v29=nil;function v29()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51~=(522 -(304 + 217))) then else local v70=0;local v71;while true do if (v70==(0 + 0)) then v71=295 -(65 + 230);while true do if (0==v71) then v54=nil;v55=nil;v71=1;end if (v71==(1 + 0)) then v51=640 -(629 + 9);break;end end break;end end end if (v51==0) then local v72=0;while true do if (1~=v72) then else v51=1;break;end if (v72==(0 -0)) then v52=0 + 0;v53=nil;v72=271 -(46 + 224);end end end if (v51~=3) then else v58=nil;while true do local v87=0;local v88;local v89;while true do if (v87~=(1 + 0)) then else while true do if (v88==(1360 -(131 + 1229))) then v89=271 -(142 + 129);while true do if ((3 -2)~=v89) then else if (v52~=(6 -3)) then else local v95=0 + 0;local v96;while true do if (0==v95) then v96=0 + 0;while true do local v102=0;local v103;while true do if (v102==(0 + 0)) then v103=0;while true do if ((0 -0)~=v103) then else if ((240 -(120 + 120))==v96) then local v162=0;local v163;while true do if (v162==(891 -(791 + 100))) then v163=0 -0;while true do if (1~=v163) then else v96=1 + 0;break;end if (v163==(0 + 0)) then local v186=0 + 0;while true do if (v186==0) then for Idx=1950 -(1296 + 653),v24() do v54[Idx-(2 -1)]=v29();end for Idx=1 -0,v24() do v55[Idx]=v24();end v186=1;end if (v186==1) then v163=3 -2;break;end end end end break;end end end if (v96~=(1 + 0)) then else return v56;end break;end end break;end end end break;end end end if (v52==2) then local v97=0;while true do if (v97==(3 -2)) then for Idx=1,v24() do local v104=0;local v105;local v106;local v107;while true do if ((4 -3)~=v104) then else v107=nil;while true do if (v105~=1) then else while true do if (v106==0) then v107=v22();if (v21(v107,1 + 0,1)==0) then local v181=0;local v182;local v183;local v184;while true do if (v181==2) then local v187=0 + 0;while true do if ((0 + 0)==v187) then if (v21(v183,1,1 -0)~=(2 -1)) then else v184[2 + 0]=v58[v184[2]];end if (v21(v183,1 + 1,141 -(90 + 49))~=(2 -1)) then else v184[6 -3]=v58[v184[4 -1]];end v187=1 -0;end if (v187~=1) then else v181=1 + 2;break;end end end if (v181==3) then if (v21(v183,9 -6,3)~=(76 -(43 + 32))) then else v184[4]=v58[v184[9 -5]];end v53[Idx]=v184;break;end if (v181==(0 -0)) then local v188=0 + 0;while true do if (v188~=(0 -0)) then else v182=v21(v107,2,3);v183=v21(v107,4 + 0,6);v188=1 -0;end if (v188==(2 -1)) then v181=1 -0;break;end end end if (v181~=(1215 -(990 + 224))) then else v184={v23(),v23(),nil,nil};if (v182==0) then local v190=0;local v191;local v192;while true do if (v190~=1) then else while true do if (v191~=0) then else v192=0;while true do if (v192==(1252 -(1180 + 72))) then v184[3]=v23();v184[4]=v23();break;end end break;end end break;end if (v190==(0 + 0)) then v191=0 + 0;v192=nil;v190=1;end end elseif (v182==(1 -0)) then v184[1 + 2]=v24();elseif (v182==2) then v184[3]=v24() -(2^(11 + 5));elseif (v182==(1188 -(794 + 391))) then local v194=0;local v195;while true do if (v194==(0 + 0)) then v195=0;while true do if (v195==0) then v184[3 -0]=v24() -((2 -0)^16);v184[4 + 0]=v23();break;end end break;end end end v181=2;end end end break;end end break;end if (v105~=0) then else local v156=0;while true do if (v156~=0) then else v106=0;v107=nil;v156=726 -(551 + 174);end if (v156==(1995 -(1105 + 889))) then v105=1;break;end end end end break;end if (v104==0) then v105=0 -0;v106=nil;v104=1;end end end v52=1216 -(185 + 1028);break;end if (0==v97) then local v98=0;while true do if (v98==(1 + 0)) then v97=538 -(413 + 124);break;end if (v98==0) then for Idx=1,v57 do local v145=0;local v146;local v147;local v148;while true do if (v145~=(4 -3)) then else v148=nil;while true do if (v146==0) then local v172=0;local v173;while true do if (v172~=0) then else v173=0;while true do if (v173~=(925 -(580 + 344))) then else v146=1;break;end if (v173==(0 -0)) then v147=v22();v148=nil;v173=1;end end break;end end end if (v146==(1 + 0)) then if (v147==1) then v148=v22()~=0;elseif (v147==2) then v148=v25();elseif (v147==(602 -(187 + 412))) then v148=v26();end v58[Idx]=v148;break;end end break;end if ((0 + 0)~=v145) then else v146=0;v147=nil;v145=1 + 0;end end end v56[2 + 1]=v22();v98=1;end end end end end break;end if ((1428 -(256 + 1172))==v89) then local v94=0 + 0;while true do if (v94==1) then v89=1;break;end if ((0 -0)==v94) then if (v52==0) then local v99=0;local v100;while true do if (0==v99) then v100=0 -0;while true do if (v100==(541 -(19 + 522))) then local v152=0;while true do if (v152~=(1563 -(1267 + 295))) then else v100=1;break;end if (v152~=0) then else v53={};v54={};v152=1;end end end if ((869 -(140 + 728))~=v100) then else v55={};v52=1;break;end end break;end end end if (v52==1) then local v101=178 -(136 + 42);while true do if (v101==1) then v58={};v52=2 + 0;break;end if (v101==(687 -(679 + 8))) then local v144=1680 -(126 + 1554);while true do if (v144==1) then v101=1;break;end if (v144==(0 + 0)) then v56={v53,v54,nil,v55};v57=v24();v144=1863 -(1163 + 699);end end end end end v94=1;end end end end break;end end break;end if (v87==(0 + 0)) then v88=0;v89=nil;v87=427 -(208 + 218);end end end break;end if (v51~=2) then else local v73=0;while true do if (v73~=1) then else v51=3;break;end if (v73==(0 + 0)) then v56=nil;v57=nil;v73=1;end end end end end v30=nil;v18=7;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v38)if (v2(v38,2)==79) then v20=v1(v4(v38,1,1));return "";else local v69=v3(v1(v38,16));if v20 then local v90=0;local v91;while true do if (v90==1) then return v91;end if (v90==0) then v91=v6(v69,v20);v20=nil;v90=1;end end else return v69;end end end);v18=1;end if (2==v18) then function v22()local v59=v2(v16,v19,v19);v19=v19 + 1;return v59;end v23=nil;function v23()local v60,v61=v2(v16,v19,v19 + 2);v19=v19 + 2 + 0;return (v61 * (847 -591)) + v60;end v18=3;end end end vv9());break;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end end end end
